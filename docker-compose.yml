services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "2182:2182"
    networks:
      - kafka_network

  kafka-1:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2182
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:29092,EXTERNAL://kafka-1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - kafka_network

  kafka-2:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2182
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:29093,EXTERNAL://kafka-2:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - kafka_network

  kafka-3:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2182
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-3:29094,EXTERNAL://kafka-3:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - kafka_network

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    networks:
      - kafka_network
    ports:
      - "8082:8082"
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - zookeeper
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-1:29092,kafka-2:29093,kafka-3:29094
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2182
      - SERVER_PORT=8082
  hbase:
    image: dajobe/hbase
    container_name: hbase
    ports:
      - "2181:2181"
      - "16000:16000"
      - "16010:16010"
      - "16020:16020"
      - "16030:16030"
    networks:
      - kafka_network
  init-hbase:
    image: dajobe/hbase
    depends_on:
      - hbase
    entrypoint: [ "sh", "-c" ]
    command: >
      "sleep 15 && \
      echo 'create \"gps_data\", \"raw\"' | hbase shell -n && \
      echo 'create \"route\", \"info\"' | hbase shell -n"
    networks:
      - kafka_network
  osrm:
    image: osrm/osrm-backend
    container_name: osrm
    command: osrm-routed --algorithm mld /data/south-korea-latest.osrm
    ports:
      - "5001:5000"
    volumes:
      - ./data:/data
    networks:
      - kafka_network


  route-server:
    image: dongkyeomjang/route-server
    container_name: route-server
    ports:
      - "8080:8080"
    networks:
      - kafka_network

  spark:
    image: dongkyeomjang/spark-streaming
    container_name: spark
    ports:
      - "4040:4040"
    depends_on:
      - kafka-1
    networks:
      - kafka_network

networks:
  kafka_network:
    driver: bridge
